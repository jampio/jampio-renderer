cmake_minimum_required(VERSION 3.10)
project(jampiorenderer)
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/cmake)
include(CheckTypeSize)
check_type_size("void*" CMAKE_SIZEOF_VOID_P)
message(STATUS "sizeof void*: " ${CMAKE_SIZEOF_VOID_P})
message(STATUS "CMAKE_CROSSCOMPILING: " ${CMAKE_CROSSCOMPILING})
message(STATUS "CMAKE_SYSTEM_PROCESSOR: " ${CMAKE_SYSTEM_PROCESSOR})
message(STATUS "CMAKE_LIBRARY_ARCHITECTURE: " ${CMAKE_LIBRARY_ARCHITECTURE})
find_package(jampioshared REQUIRED)
find_package(jampiocommonded REQUIRED)
find_package(jampiocommonpc REQUIRED)
find_package(PkgConfig REQUIRED)
find_package(OpenGL REQUIRED)
find_package(JPEG REQUIRED)
pkg_check_modules(ZIP zlib REQUIRED)
# find_package(PNG REQUIRED)
set(SOURCES
	src/image.cpp
	src/png.cpp
)
# pragma diagnostic is broken in GNU C++
# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53431
if(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
	set_source_files_properties(src/png.cpp PROPERTIES COMPILE_FLAGS "-Wno-multichar")
endif()
add_library(jampiorendererded STATIC ${SOURCES})
add_library(jampiorendererpc STATIC ${SOURCES})
set_target_properties(jampiorendererded PROPERTIES CXX_STANDARD 17)
set_target_properties(jampiorendererpc PROPERTIES CXX_STANDARD 17)
target_compile_definitions(jampiorendererded PRIVATE DEDICATED)
target_include_directories(jampiorendererded PRIVATE ${jampioshared_INCLUDE})
target_include_directories(jampiorendererded PRIVATE ${jampiocommonded_INCLUDE})
target_include_directories(jampiorendererded PRIVATE ${JPEG_INCLUDE})
target_include_directories(jampiorendererded PRIVATE ${ZLIB_INCLUDE_DIR})
# target_include_directories(jampiorendererded PRIVATE ${PNG_INCLUDE})
target_include_directories(jampiorendererpc PRIVATE ${jampioshared_INCLUDE})
target_include_directories(jampiorendererpc PRIVATE ${jampiocommonpc_INCLUDE})
target_include_directories(jampiorendererpc PRIVATE ${OpenGL_INCLUDE})
target_include_directories(jampiorendererpc PRIVATE ${JPEG_INCLUDE})
target_include_directories(jampiorendererpc PRIVATE ${ZLIB_INCLUDE_DIR})
# target_include_directories(jampiorendererpc PRIVATE ${PNG_INCLUDE})
target_link_libraries(jampiorendererded PRIVATE jampioshared)
target_link_libraries(jampiorendererded PRIVATE jampiocommonded)
target_link_libraries(jampiorendererpc PRIVATE jampioshared)
target_link_libraries(jampiorendererpc PRIVATE jampiocommonpc)
target_link_libraries(jampiorendererpc PRIVATE OpenGL)
target_link_libraries(jampiorendererpc PRIVATE JPEG)
target_link_libraries(jampiorendererpc PRIVATE ${ZLIB_STATIC_LIBRARIES})
# target_link_libraries(jampiorendererpc PRIVATE PNG)
# custom install enforces lib/<arch> on certain systems
if(USE_CUSTOM_INSTALL)
	include(GNUInstallDirsCustom)
else()
	include(GNUInstallDirs)
endif()
install(TARGETS jampiorendererded EXPORT jampiorendererdedConfig DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(TARGETS jampiorendererpc EXPORT jampiorendererpcConfig DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(DIRECTORY src/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/jampio/renderer FILES_MATCHING PATTERN "*.h")
install(EXPORT jampiorendererdedConfig DESTINATION ${CMAKE_INSTALL_LIBDIR}/jampiorendererded)
install(EXPORT jampiorendererpcConfig DESTINATION ${CMAKE_INSTALL_LIBDIR}/jampiorendererpc)